@page "/"
@using GridEditFormSample.Data
@using Syncfusion.Blazor.Navigations
@inject NavigationManager NavigationManager
@inject OrderService Ord
@{
    List<ItemModel> Toolbaritems = new List<ItemModel>();
    Toolbaritems.Add(new ItemModel() { Text = "Add", Id = "add", TooltipText = "Add Record", PrefixIcon = "e-add" });
    Toolbaritems.Add(new ItemModel() { Text = "Delete", Id = "Delete", TooltipText = "Delete Record", PrefixIcon = "e-delete" });
}

<SfGrid DataSource="@Orders" AllowPaging="true" Toolbar="@Toolbaritems">
    <GridEvents OnRecordDoubleClick="DoubleClick" RowSelected="RowSelectedHandler" OnToolbarClick="ToolClick" TValue="Order"></GridEvents>
    <GridEditSettings AllowEditing="true" AllowEditOnDblClick="false" AllowDeleting="true"></GridEditSettings>
    <GridColumns>
        <GridColumn Field=@nameof(Order.OrderID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="TextAlign.Right" Width="120"></GridColumn>
        <GridColumn Field=@nameof(Order.CustomerID) HeaderText="Customer Name" Width="120"></GridColumn>
        <GridColumn Field=@nameof(Order.OrderDate) HeaderText=" Order Date" EditType="EditType.DatePickerEdit" Format="d" TextAlign="TextAlign.Right" Width="130" Type="ColumnType.Date"></GridColumn>
        <GridColumn Field=@nameof(Order.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right" Width="120"></GridColumn>
    </GridColumns>
</SfGrid>

@code{
    public List<Order> Orders { get; set; }
    public Order SelectedRecord { get; set; } = new Order();
    public void ToolClick(ClickEventArgs Args)
    {
        if (Args.Item.Text == "Add")
        {
            NavigationManager.NavigateTo("addRecord/0");
        }
        else if (Args.Item.Text == "Delete")
        {
            if (SelectedRecord.OrderID > 0)
            {
                NavigationManager.NavigateTo($"deleteRecord/{SelectedRecord.OrderID}");
            }
            else
            {
                NavigationManager.NavigateTo($"deleteRecord/0");
            }
        }
    }
    public void RowSelectedHandler(RowSelectEventArgs<Order> Args)
    {
        SelectedRecord.OrderID = Args.Data.OrderID;
    }
    public void DoubleClick(RecordDoubleClickEventArgs<Order> Args)
    {
        NavigationManager.NavigateTo($"addRecord/{Args.RowData.OrderID}");
    }
    public void UpdateRecord()
    {

    }
    protected override void OnInitialized()
    {
        Orders = Ord.GetOrderDetails();
    }


}